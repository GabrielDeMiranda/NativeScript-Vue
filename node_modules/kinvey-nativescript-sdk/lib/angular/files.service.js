import { Injectable, Inject } from '@angular/core';
import { init, Files } from '../nativescript';
import { KinveyConfigToken } from './utils';
import * as i0 from "@angular/core";
export class FilesService {
    constructor(config) {
        init(config);
    }
    create(file, metadata, options) {
        return Files.create(file, metadata, options);
    }
    download(id, options) {
        return Files.download(id, options);
    }
    downloadByUrl(url, options) {
        return Files.downloadByUrl(url, options);
    }
    find(query, options) {
        return Files.find(query, options);
    }
    findById(id, options) {
        return Files.findById(id, options);
    }
    remove() {
        return Files.remove();
    }
    removeById(id, options) {
        return Files.removeById(id, options);
    }
    stream(id, options) {
        return Files.stream(id, options);
    }
    update(file, metadata, options) {
        return Files.update(file, metadata, options);
    }
    upload(file, metadata, options) {
        return Files.upload(file, metadata, options);
    }
}
FilesService.ɵfac = function FilesService_Factory(t) { return new (t || FilesService)(i0.ɵɵinject(KinveyConfigToken)); };
FilesService.ɵprov = i0.ɵɵdefineInjectable({ token: FilesService, factory: FilesService.ɵfac, providedIn: 'root' });
/*@__PURE__*/ (function () { i0.ɵsetClassMetadata(FilesService, [{
        type: Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return [{ type: undefined, decorators: [{
                type: Inject,
                args: [KinveyConfigToken]
            }] }]; }, null); })();
//# sourceMappingURL=files.service.js.map