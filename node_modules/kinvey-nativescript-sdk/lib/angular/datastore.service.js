import { Inject, Injectable } from '@angular/core';
import { init, DataStore } from '../nativescript';
import { KinveyConfigToken } from './utils';
import * as i0 from "@angular/core";
export class DataStoreService {
    constructor(config) {
        init(config);
    }
    collection(collectionName, type, options) {
        return DataStore.collection(collectionName, type, options);
    }
    clearCache() {
        return DataStore.clearCache();
    }
}
DataStoreService.ɵfac = function DataStoreService_Factory(t) { return new (t || DataStoreService)(i0.ɵɵinject(KinveyConfigToken)); };
DataStoreService.ɵprov = i0.ɵɵdefineInjectable({ token: DataStoreService, factory: DataStoreService.ɵfac, providedIn: 'root' });
/*@__PURE__*/ (function () { i0.ɵsetClassMetadata(DataStoreService, [{
        type: Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return [{ type: undefined, decorators: [{
                type: Inject,
                args: [KinveyConfigToken]
            }] }]; }, null); })();
//# sourceMappingURL=datastore.service.js.map