import { Inject, Injectable } from '@angular/core';
import { init } from '../nativescript/init';
import * as Push from '../nativescript/push';
import { KinveyConfigToken } from './utils';
import * as i0 from "@angular/core";
export class PushService {
    constructor(config) {
        init(config);
    }
    register(callback, options) {
        return Push.register(callback, options);
    }
    unregister(options) {
        return Push.unregister(options);
    }
}
PushService.ɵfac = function PushService_Factory(t) { return new (t || PushService)(i0.ɵɵinject(KinveyConfigToken)); };
PushService.ɵprov = i0.ɵɵdefineInjectable({ token: PushService, factory: PushService.ɵfac, providedIn: 'root' });
/*@__PURE__*/ (function () { i0.ɵsetClassMetadata(PushService, [{
        type: Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return [{ type: undefined, decorators: [{
                type: Inject,
                args: [KinveyConfigToken]
            }] }]; }, null); })();
//# sourceMappingURL=push.service.js.map